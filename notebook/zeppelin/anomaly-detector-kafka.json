{"paragraphs":[{"title":"Visualizer Section","text":"%angular\r\n<div id=\"measurementChart\" style=\"height:400px; width: 700px; float:left;\"><svg></svg></div>\r\n<div id=\"errorChart\" style=\"height:400px; width: 700px; float:left;\"><svg></svg></div>\r\n<div id=\"anomalyChart\" style=\"height:400px; width: 700px; float:left;\"><svg></svg></div>\r\n<div id=\"predictionChart\" style=\"height:400px; width: 700px; float:left;\"><svg></svg></div>\r\n\r\n<script type=\"text/javascript\">\r\nvar data = {\r\n\terrorData: {\r\n\t\tvalues: [],\r\n\t\tkey: \"Error\",\r\n\t\tcolor: \"#ff4000\",\r\n\t\tarea: true\r\n\t},\r\n\tanomalyData: {\r\n\t\tvalues: [],\r\n\t\tkey: \"Anomly\",\r\n\t\tcolor: \"#0080ff\",\r\n\t\tarea: true\r\n\t},\r\n\tpredictionData: {\r\n\t\tvalues: [],\r\n\t\tkey: \"Prediction\",\r\n\t\tcolor: \"#ff8000\",\r\n\t\tarea: true\r\n\t},\r\n\terrorPoints: {\r\n\t\tvalues: [],\r\n\t\tkey: \"Anomaly points\",\r\n\t\tcolor: \"#ff4000\"\r\n\t},\r\n\tmeasurementData: {\r\n\t\tvalues: [],\r\n\t\tkey: \"Measurement\",\r\n\t\tcolor: \"#00ff80\",\r\n\t\tarea: true\r\n\t}\r\n};\r\n\r\nvar counter = 0;\r\nvar measurementGraph = null;\r\nvar anomalyGraph = null;\r\nvar predictionGraph = null;\r\nvar predictionMeasurementGraph = null;\r\n\r\nvar errorTreshold = 0.7;\r\nvar displayWindow = 500;\r\nvar counter = 0;\r\n\r\nfunction pushErrorData(record, index) {\r\n\tif (data.errorData.values.length > displayWindow) {\r\n\t\tdata.errorData.values.shift();\r\n\t}\r\n\tdata.errorData.values.push({x: index, y: record[\"error\"]});\r\n};\r\n\r\nfunction pushAnomalyData(record, index) {\r\n\tif (data.anomalyData.values.length > displayWindow) {\r\n\t\tdata.anomalyData.values.shift();\r\n\t}\r\n\tdata.anomalyData.values.push({x: index, y: record[\"anomaly\"]});\r\n};\r\n\r\nfunction pushPredictionData(record, index) {\r\n\tif (data.predictionData.values.length > displayWindow) {\r\n\t\tdata.predictionData.values.shift();\r\n\t}\r\n\tdata.predictionData.values.push({x: index, y: record[\"prediction\"]});\r\n\r\n};\r\n\r\nfunction pushMeasurementData(record, index) {\r\n\tif (data.measurementData.values.length > displayWindow) {\r\n\t\tdata.measurementData.values.shift();\r\n\t\tdata.errorPoints.values.shift();\r\n\t}\r\n\tdata.measurementData.values.push({x: index, y: record[\"sampleMeasurement\"], anomaly: record[\"anomaly\"]});\r\n\tif(record[\"anomaly\"] >= errorTreshold) {\r\n\t\tdata.errorPoints.values.push({x: index, y: record[\"sampleMeasurement\"], shape: 'square'})\r\n\t} else {\r\n\t    data.errorPoints.values.push({x: index, y: 0, shape: 'square'})\r\n\t}\r\n};\r\n\r\nvar measurementChart = nv.models.lineChart().showLegend(true).showYAxis(true).showXAxis(true);\r\nmeasurementChart.xAxis.axisLabel('Time (ms)').tickFormat(d3.format(',r'));\r\nmeasurementChart.yAxis.axisLabel('Value').tickFormat(d3.format('.02f'));\r\n\r\nvar errorChart = nv.models.lineChart().showLegend(true).showYAxis(true).showXAxis(true);\r\nmeasurementChart.xAxis.axisLabel('Time (ms)').tickFormat(d3.format(',r'));\r\nmeasurementChart.yAxis.axisLabel('Value').tickFormat(d3.format('.02f'));\r\n\r\nvar anomalyChart = nv.models.lineChart().showLegend(true).showYAxis(true).showXAxis(true);\r\nmeasurementChart.xAxis.axisLabel('Time (ms)').tickFormat(d3.format(',r'));\r\nmeasurementChart.yAxis.axisLabel('Value').tickFormat(d3.format('.02f'));\r\n\r\nvar predictionChart = nv.models.lineChart().showLegend(true).showYAxis(true).showXAxis(true);\r\nmeasurementChart.xAxis.axisLabel('Time (ms)').tickFormat(d3.format(',r'));\r\nmeasurementChart.yAxis.axisLabel('Value').tickFormat(d3.format('.02f'));\r\n\r\nvar el = angular.element($('#measurementChart').parent('.ng-scope'));\r\nangular.element(el).ready(function() {\r\n    window.locationWatcher = el.scope().compiledScope.$watch(\"data\", function(newValue, oldValue) {\r\n        if(typeof newValue !== \"undefined\") {\r\n    \t\tangular.forEach(newValue, function(recordStr) {\r\n    \t\t\tvar rec = JSON.parse(recordStr);\r\n    \t\t\tpushErrorData(rec, counter);\r\n        \t\tpushAnomalyData(rec, counter);\r\n        \t\tpushPredictionData(rec, counter);\r\n        \t\tpushMeasurementData(rec, counter);\r\n        \t\tcounter++;\r\n        \t\tnv.utils.windowResize(measurementChart.update);\r\n    \t\t\tnv.utils.windowResize(errorChart.update);\r\n    \t\t\tnv.utils.windowResize(anomalyChart.update);\r\n    \t\t\tnv.utils.windowResize(predictionChart.update);\r\n            });\r\n\t\t    nv.addGraph(function() {\r\n        \t\td3.select('#measurementChart svg').datum([data.measurementData, data.errorPoints]).call(measurementChart);  \r\n        \t});\r\n        \tnv.addGraph(function() {\r\n        \t\td3.select('#errorChart svg').datum([data.measurementData, data.errorData]).call(errorChart);  \r\n        \t});\r\n        \tnv.addGraph(function() {\r\n        \t\td3.select('#anomalyChart svg').datum([data.measurementData, data.anomalyData]).call(anomalyChart);  \r\n        \t});\r\n        \tnv.addGraph(function() {\r\n        \t\td3.select('#predictionChart svg').datum([data.measurementData, data.predictionData]).call(predictionChart);  \r\n        \t});\r\n        }\r\n    });\r\n\r\n   \r\n});\r\n</script>Visualizer Section","dateUpdated":"2017-08-04T14:56:37+0300","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/undefined","editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1501847797477_1298153677","id":"20170727-013710_1469225746","dateCreated":"2017-08-04T14:56:37+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1319"},{"title":"Streaming Section","text":"%spark2\n\nimport org.apache.spark.streaming.kafka010._\nimport org.apache.spark.storage.StorageLevel\nimport org.apache.spark.streaming._\nimport org.apache.spark.streaming.kafka010.LocationStrategies.PreferConsistent\nimport org.apache.spark.streaming.kafka010.ConsumerStrategies.Subscribe\nimport org.apache.kafka.common.serialization.StringDeserializer\nimport org.apache.spark.sql.types._\nimport sqlContext.implicits._\n\nval ssc = new StreamingContext(sc, Seconds(2))\n\nval kafkaParams = Map[String, Object](\n  \"bootstrap.servers\" -> \"localhost:9092\",\n  \"key.deserializer\" -> classOf[StringDeserializer],\n  \"value.deserializer\" -> classOf[StringDeserializer],\n  \"group.id\" -> \"zeppelin_group\",\n  \"auto.offset.reset\" -> \"latest\",\n  \"enable.auto.commit\" -> (false: java.lang.Boolean))\n\nval stream = KafkaUtils.createDirectStream[String, String](\n  ssc,\n  PreferConsistent,\n  Subscribe[String, String](Array(\"monitoringEnriched2\"), kafkaParams))\n\nstream.map(record => record.value())\n  .foreachRDD(rdd => {\n  val items = rdd.collect\n  z.angularBind(\"data\", items)\n})\nssc.start()","dateUpdated":"2017-08-04T14:57:10+0300","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{"0":{"graph":{"mode":"table","height":227,"optionOpen":false}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1501847797478_1299307924","id":"20170726-204504_1747999150","dateCreated":"2017-08-04T14:56:37+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1320"},{"title":"Stop Streaming Application","text":"%spark2\n\nssc.stop(false)","dateUpdated":"2017-08-04T14:56:37+0300","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1501847797479_1298923175","id":"20170726-204515_1457496515","dateCreated":"2017-08-04T14:56:37+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1321"},{"dateUpdated":"2017-08-04T14:56:37+0300","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1501847797480_1296999431","id":"20170804-130444_414879021","dateCreated":"2017-08-04T14:56:37+0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1322"}],"name":"anomaly-detector-kafka","id":"2CSJYK4RE","angularObjects":{"2CMP77N2M:shared_process":[],"2CQ5GV64X:shared_process":[],"2CNFK53KC:shared_process":[],"2CNA5PBN9:shared_process":[],"2CQ7CB3V1:shared_process":[],"2CP9A7C3U:shared_process":[],"2CMC54VR1:shared_process":[],"2CN2QETMS:shared_process":[],"2CMCKN6NX:shared_process":[],"2CMZPN94H:shared_process":[],"2CNR58M9M:shared_process":[],"2CQEE6JR5:shared_process":[],"2CNCXJXH6:shared_process":[],"2CQPM2PGW:shared_process":[],"2CQFKCBU4:shared_process":[],"2CP4YDFJY:shared_process":[],"2CQCFZAY5:shared_process":[],"2CPBTEBRC:shared_process":[],"2CQ889NCX:shared_process":[],"2CMXWFBA8:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}